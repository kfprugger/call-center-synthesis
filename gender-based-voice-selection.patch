diff --git a/app/__pycache__/main.cpython-312.pyc b/app/__pycache__/main.cpython-312.pyc
index 37cada7..7b48389 100644
Binary files a/app/__pycache__/main.cpython-312.pyc and b/app/__pycache__/main.cpython-312.pyc differ
diff --git a/app/__pycache__/models.cpython-312.pyc b/app/__pycache__/models.cpython-312.pyc
index b6c741a..24a449c 100644
Binary files a/app/__pycache__/models.cpython-312.pyc and b/app/__pycache__/models.cpython-312.pyc differ
diff --git a/app/services/__pycache__/audio_generator.cpython-312.pyc b/app/services/__pycache__/audio_generator.cpython-312.pyc
index f724097..211f916 100644
Binary files a/app/services/__pycache__/audio_generator.cpython-312.pyc and b/app/services/__pycache__/audio_generator.cpython-312.pyc differ
diff --git a/app/services/__pycache__/transcript_generator.cpython-312.pyc b/app/services/__pycache__/transcript_generator.cpython-312.pyc
index bd9beb4..105b23b 100644
Binary files a/app/services/__pycache__/transcript_generator.cpython-312.pyc and b/app/services/__pycache__/transcript_generator.cpython-312.pyc differ
diff --git a/app/services/audio_generator.py b/app/services/audio_generator.py
index 9c5c5d0..b5c9e84 100644
--- a/app/services/audio_generator.py
+++ b/app/services/audio_generator.py
@@ -8,14 +8,38 @@ import tempfile
 import os
 from typing import Dict, Optional, Tuple, Union
 import base64
+import gender_guesser.detector as gender
 
 class AudioGenerator:
     def __init__(self):
         self.voice_settings = {
-            'agent': {'voice_name': 'en-US-JennyNeural'},  # US English, professional female voice
-            'caller': {'voice_name': 'en-GB-SoniaNeural'}  # UK English, professional female voice
+            'agent': {
+                'male': {'voice_name': 'en-US-BrianNeural'},    # US English, professional male voice
+                'female': {'voice_name': 'en-US-JennyNeural'}   # US English, professional female voice
+            },
+            'caller': {
+                'male': {'voice_name': 'en-GB-RyanNeural'},     # UK English, professional male voice  
+                'female': {'voice_name': 'en-GB-SoniaNeural'}   # UK English, professional female voice
+            }
         }
     
+    def _detect_gender_from_name(self, name: str) -> str:
+        """Detect gender from a given name. Returns 'male' or 'female'."""
+        d = gender.Detector()
+        
+        first_name = name.split()[0] if ' ' in name else name
+        
+        first_name = first_name.replace('Dr.', '').replace('Mr.', '').replace('Ms.', '').replace('Mrs.', '').strip()
+        
+        gender_result = d.get_gender(first_name)
+        
+        if gender_result in ['male', 'mostly_male']:
+            return 'male'
+        elif gender_result in ['female', 'mostly_female']:
+            return 'female'
+        else:
+            return 'female'
+    
     def generate_audio(self, transcript: str, audio_settings: Dict, audio_id: Optional[str] = None) -> Optional[Union[str, bytes]]:
         """Generate audio file from transcript. Returns file path if audio_id provided, otherwise bytes."""
         try:
@@ -24,7 +48,9 @@ class AudioGenerator:
             audio_segments = []
             
             for i, (speaker, text) in enumerate(segments):
-                voice_config = self._get_voice_config(speaker)
+                speaker_name = self._extract_name_from_speaker(speaker, transcript)
+                voice_config = self._get_voice_config(speaker, speaker_name)
+                
                 
                 segment_audio = self._text_to_speech(text, voice_config)
                 
@@ -69,12 +95,34 @@ class AudioGenerator:
         
         return segments
     
-    def _get_voice_config(self, speaker: str) -> Dict:
-        """Get voice configuration based on speaker."""
-        if 'agent' in speaker.lower():
-            return self.voice_settings['agent']
+    def _get_voice_config(self, speaker: str, speaker_name: Optional[str] = None) -> Dict:
+        """Get voice configuration based on speaker type and name gender."""
+        speaker_type = 'agent' if 'agent' in speaker.lower() else 'caller'
+        
+        if speaker_name:
+            gender = self._detect_gender_from_name(speaker_name)
+            return self.voice_settings[speaker_type][gender]
+        else:
+            return self.voice_settings[speaker_type]['female']
+    
+    def _extract_name_from_speaker(self, speaker: str, transcript_text: Optional[str] = None) -> str:
+        """Extract the actual name from speaker label or transcript context."""
+        if 'Agent' in speaker and transcript_text:
+            import re
+            agent_intro_pattern = r'this is (\w+)'
+            match = re.search(agent_intro_pattern, transcript_text, re.IGNORECASE)
+            if match:
+                return match.group(1)
+        
+        if 'Agent' in speaker:
+            parts = speaker.split()
+            if len(parts) > 1:
+                return ' '.join(parts[1:])  # Return everything after "Agent"
+            else:
+                return speaker  # Fallback to full speaker label
         else:
-            return self.voice_settings['caller']
+            name = speaker.replace('Dr.', '').replace('Mr.', '').replace('Ms.', '').replace('Mrs.', '').strip()
+            return name if name else speaker
     
     def _apply_voice_characteristics(self, audio: AudioSegment, speaker: str) -> AudioSegment:
         """Apply voice characteristics to differentiate speakers."""
diff --git a/poetry.lock b/poetry.lock
index 02c965c..5977f63 100644
--- a/poetry.lock
+++ b/poetry.lock
@@ -301,6 +301,17 @@ uvicorn = {version = ">=0.15.0", extras = ["standard"]}
 [package.extras]
 standard = ["uvicorn[standard] (>=0.15.0)"]
 
+[[package]]
+name = "gender-guesser"
+version = "0.4.0"
+description = "Get the gender from first name."
+optional = false
+python-versions = "*"
+files = [
+    {file = "gender-guesser-0.4.0.tar.gz", hash = "sha256:1591c14592805ca7da06a46d5f7202511f7cb87547049a68dfccbeedb879f31b"},
+    {file = "gender_guesser-0.4.0-py2.py3-none-any.whl", hash = "sha256:7cb01ce5d8d43b94573498bc02c959b622872abd399622ca67d1b73ba6e7e222"},
+]
+
 [[package]]
 name = "h11"
 version = "0.16.0"
@@ -1454,4 +1465,4 @@ files = [
 [metadata]
 lock-version = "2.0"
 python-versions = "^3.12"
-content-hash = "a395dfa7f57198145cc555e0cec1186b7c39d933c578acc9e82053081a01d035"
+content-hash = "d2ce49fbd4e969aeb2b37ac9711659302fa4ed85d1aaa3831e0635e2551b300a"
diff --git a/pyproject.toml b/pyproject.toml
index a3ab9fe..757af92 100644
--- a/pyproject.toml
+++ b/pyproject.toml
@@ -16,6 +16,7 @@ scipy = "^1.16.0"
 python-multipart = "^0.0.20"
 azure-cognitiveservices-speech = "^1.44.0"
 python-dotenv = "^1.1.1"
+gender-guesser = "^0.4.0"
 
 
 [build-system]
